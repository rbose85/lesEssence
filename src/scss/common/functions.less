//  _____                 _   _
// |  ___|   _ _ __   ___| |_(_) ___  _ __  ___
// | |_ | | | | '_ \ / __| __| |/ _ \| '_ \/ __|
// |  _|| |_| | | | | (__| |_| | (_) | | | \__ \
// |_|   \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
//

#arrow(@_; @width: 20px; @color: #f00){
    content: " ";
    width: 0;
    height: 0;
    background: none;
    border: (@width / 2) solid;
    display: block;
}

#arrow(up; @width: 20px; @color: #f00){
    border-color: transparent transparent @color transparent;
}

#arrow(upRight; @width: 20px; @color: #f00){
    border-color: @color @color transparent transparent;
}

#arrow(right; @width: 20px; @color: #f00){
    border-color: transparent transparent transparent @color;
}

#arrow(downRight; @width: 20px; @color: #f00){
    border-color: transparent @color @color transparent;
}

#arrow(down; @width: 20px; @color: #f00){
    border-color: @color transparent transparent transparent;
}

#arrow(downLeft; @width: 20px; @color: #f00){
    border-color: transparent transparent @color @color;
}

#arrow(left; @width: 20px; @color: #f00){
    border-color: transparent @color transparent transparent;
}

#arrow(upRight; @width: 20px; @color: #f00){
    border-color: @color transparent transparent @color;
}

#autoFillList(@layout: auto){ // to be placed on the ul wrapper
    display: table;
    width: 100%;
    table-layout: @layout;
    float: none;

    > li{
        display: table-cell;
        float: none;
        text-align: center;
        list-style: none;
        vertical-align: middle
    }
}

#backface(@args){
    -webkit-backface-visibility: @args;
    -moz-backface-visibility: @args;
    -ms-backface-visibility: @args;
    -o-backface-visibility: @args;
    backface-visibility: @args;
}

#boxShadow(@args) {
    -webkit-box-shadow: @args;
    -moz-box-shadow: @args;
    box-shadow: @args;
}

#borderRadius(@args) {
    -webkit-border-radius: @args;
    border-radius: @args;
    // Additonal properties
    //     position: relative;
    //     behavior: url(/PIE.htc); // causes page to jump
    //     zoom: 1;
    //     -moz-background-clip: padding;
    //     -webkit-background-clip: padding-box;
    //     background-clip: padding-box;
}

// prevents a parent collapsing when the children are floating
#clearfix(@_){
    *zoom:1;
}

// clears both the top and the bottom of an element
#clearfix(both){
    &:before,
    &:after{
        display:table;
        content:"";
    }

    &:after{
        clear:both;
    }
}

// clears only the bottom of an element. To be used when also using :before
#clearfix(after){
    &:after{
        display:table;
        content:"";
    }

    &:after{
        clear:both;
    }
}

// removes a clearfix
#clearfixfix(remove){
    &:before,
    &:after{
        display: none;
    }
}

// converts a list into an inline comma separated list
#commaList(){
    list-style: none;

    li{
        display: inline-block;

        &:after{
            content: ", "
        }

        &:last-child{
            &:before{
                content: "& ";
            }

        }

        &:first-child{
            &:before{
                display: none; // hide the
            }
        }

        &:nth-last-child(2),
        &:last-child{
            &:after{
                display: none; // hide the trailing comma
            }
        }
    }
}

#boxSizing(@type){
    -webkit-box-sizing: @type;
    -moz-box-sizing: @type;
    box-sizing: @type;
}

#columns(@colwidth: 250px, @colcount: 0, @colgap: 50px, @columnRuleColor: #EEE, @columnRuleStyle: solid, @columnRuleWidth: 1px) {
    -webkit-column-count: @colcount;
    -webkit-column-gap: @colgap;
    -webkit-column-rule-color: @columnRuleColor;
    -webkit-column-rule-style: @columnRuleStyle;
    -webkit-column-rule-width: @columnRuleWidth;
    -moz-column-count: @colcount;
    -moz-column-gap: @colgap;
    -moz-column-rule-color: @columnRuleColor;
    -moz-column-rule-style: @columnRuleStyle;
    -moz-column-rule-width: @columnRuleWidth;
    column-count: @colcount;
    column-gap: @colgap;
    column-rule-color: @columnRuleColor;
    column-rule-style: @columnRuleStyle;
    column-rule-width: @columnRuleWidth;
}

#customListStyle(@after: ""; @list: list-alpha){
    counter-reset: @list;

    > li{
        list-style: none;

        &:before{
            counter-increment: @list;
            content: counter(@list) @after;
        }
    }
}

#fontSize(@target, @base: @bodySize){
    @ratio: (@target / @base);
    font-size: 1em * @ratio;
}

#fullSizeBg(height){ // fits by height
    -webkit-background-size: auto 100%;
    -moz-background-size: auto 100%;
    -o-background-size: auto 100%;
    background-size: auto 100%;
}

#fullSizeBg(width){ // fits by width
    -webkit-background-size: 100% auto;
    -moz-background-size: 100% auto;
    -o-background-size: 100% auto;
    background-size: 100% auto;
}

#gradient(@background: #f00, @color: #F5F5F5, @switch: 50%, @stop:#FFF){
    background: @background; /* Old browsers */
    background: -moz-linear-gradient(top,  @color @switch, @stop 100%); /* FF3.6+ */
    background: -webkit-gradient(linear, left top, left bottom, color-stop(@switch,@color), color-stop(100%,@stop)); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(top, @color @switch,@stop 100%); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(top, @color @switch,@stop 100%); /* Opera 11.10+ */
    background: -ms-linear-gradient(top, @color @switch,@stop 100%); /* IE10+ */
    background: linear-gradient(top bottom, @color @switch, @stop 100%); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='@{color}', endColorstr='@{stop}',GradientType=0); /* IE6-9 */
}

#gradientHorz(@background: #f00, @color: #F5F5F5, @begin: 0%, @end: 100%, @stop:#FFF){
    background: @background; /* Old browsers */
    background: -moz-linear-gradient(left,  @color @begin, @stop @end); /* FF3.6+ */
    background: -webkit-gradient(linear, left top, right top, color-stop(@begin,@color), color-stop(@end,@stop)); /* Chrome,Safari4+ */
    background: -webkit-linear-gradient(left, @color @begin,@stop @end); /* Chrome10+,Safari5.1+ */
    background: -o-linear-gradient(left, @color @begin,@stop @end); /* Opera 11.10+ */
    background: -ms-linear-gradient(left, @color @begin,@stop @end); /* IE10+ */
    background: linear-gradient(left right, @color @begin, @stop @end); /* W3C */
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='@{color}', endColorstr='@{stop}',GradientType=0); /* IE6-9 */
}

#gradientBW(@color: #F5F5F5, @start: 0, @stop: 255) {
    background: @color;
    background: -webkit-gradient(linear,left bottom,left top,color-stop(0, rgb(@start,@start,@start)),color-stop(1, rgb(@stop,@stop,@stop)));
    background: -ms-linear-gradient(bottom,rgb(@start,@start,@start) 0%,rgb(@start,@start,@start) 100%);
    background: -moz-linear-gradient(center bottom,rgb(@start,@start,@start) 0%,rgb(@stop,@stop,@stop) 100%);
}

#greyscale(){
    -webkit-filter: grayscale(100%); /* Chrome 19+, Safari 6+, Safari 6+ iOS */
    filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/></filter></svg>#grayscale"); /* Firefox 10+, Firefox on Android */
    filter: gray; /* IE6-9 */
}

#ungreyscale(){
    filter: url("data:image/svg+xml;utf8,<svg xmlns=\'http://www.w3.org/2000/svg\'><filter id=\'grayscale\'><feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/></filter></svg>#grayscale");
    -webkit-filter: grayscale(0%);
}

#opacity(@opacity: 0.5) {
    @percent: (@opacity * 100);
    -moz-opacity: @opacity;
    -khtml-opacity: @opacity;
    -webkit-opacity: @opacity;
    opacity: @opacity;
    // filter: ~"alpha(opacity=@{percent})";
    //-ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{percent})";
}

#responsivePadding (@width, @height, @tweak: 100%) {
    height: auto;
    padding-top: ((@height / @width) * @tweak);
    width: @tweak;
}

#responsiveImage (@name, @type, @width, @height) {
    width: @width;
    height: @height;
    background: url(~"../img/revamp/@{name}.@{type}") no-repeat 0 0 transparent;
    background-size: 100% auto;

    @media @mediaDesktop{
    }

    @media @mediaRetina {
        background-image: url(~"../img/revamp/@{name}@2x.@{type}");
    }
}

#retinaBorder(@color, @position) when (@position = all){
    border: 1px solid @color;

    @media @mediaRetina {
        border: none;
        background-image: linear-gradient(0deg, @color, @color 50%, transparent 50%),
                          linear-gradient(90deg, @color, @color 50%, transparent 50%),
                          linear-gradient(0deg, transparent, transparent 50%, @color 50%),
                          linear-gradient(90deg, transparent, transparent 50%, @color 50%);
        background-repeat: no-repeat;
        background-position: bottom, left, top, right;
        background-size: 100% 1px, 1px 100%, 100% 1px, 1px 100%;
    }
}

#retinaBorder(@color, @position) when (@position = top){
    border-top: 1px solid @color;

    @media @mediaRetina {
        border: none;
        background-image: linear-gradient(0deg, transparent, transparent 50%, @color 50%);
        background-repeat: no-repeat;
        background-position: top;
        background-size: 100% 1px;
    }
}

#retinaBorder(@color, @position) when (@position = right){
        border-right: 1px solid @color;

    @media @mediaRetina {
        border: none;
        background-image: linear-gradient(90deg, transparent, transparent 50%, @color 50%);
        background-repeat: no-repeat;
        background-position: right;
        background-size: 1px 100%;
    }
}

#retinaBorder(@color, @position) when (@position = bottom){
    border-bottom: 1px solid @color;

    @media @mediaRetina {
        border: none;
        background-image: linear-gradient(0deg, @color, @color 50%, transparent 50%);
        background-repeat: no-repeat;
        background-position: bottom;
        background-size: 100% 1px;
    }
}

#retinaBorder(@color, @position) when (@position = left){
    border-left: 1px solid @color;

    @media @mediaRetina {
        border: none;
        background-image: linear-gradient(90deg, @color, @color 50%, transparent 50%);
        background-repeat: no-repeat;
        background-position: left;
        background-size: 1px 100%;
    }
}

#retinaBorder(@color, @position) when (@position = topBottom){
    border: solid @color;
    border-width: 1px 0;

    @media @mediaRetina {
        border: none;
        background-image: linear-gradient(0deg, @color, @color 50%, transparent 50%),
                          linear-gradient(0deg, transparent, transparent 50%, @color 50%);
        background-repeat: no-repeat;
        background-position: bottom, top;
        background-size: 100% 1px, 100% 1px;
    }
}

#retinaBorder(@color, @position) when (@position = leftRight){
    border: solid @color;
    border-width: 0 1px;

    @media @mediaRetina {
        border: none;
        background-image: linear-gradient(90deg, transparent, transparent 50%, @color 50%),
                          linear-gradient(90deg, @color, @color 50%, transparent 50%);
        background-repeat: no-repeat;
        background-position: bottom, top;
        background-size: 1px 100%, 1px 100%;
    }
}

#retinaBorderClear() {
    border: none !important;

    @media @mediaRetina {
        border: none;
        background-image: none;
    }
}

#rotate(@deg:5, @origin: 50% 50%){
    -webkit-transform: rotate(~"@{deg}deg");
    -moz-transform: rotate(~"@{deg}deg");
    -ms-transform: rotate(~"@{deg}deg");
    -o-transform: rotate(~"@{deg}deg");
    transform: rotate(~"@{deg}deg");
    // filter: ~"progid:DXImageTransform.Microsoft.BasicImage(rotation=@{deg})";
    // -ms-filter: ~"progid:DXImageTransform.Microsoft.Matrix(M11=0.9848077530122079, M12=-0.17364817766693127, M21=0.17364817766693127, M22=0.9848077530122079, SizingMethod='auto expand')"; // must be placed in IE8 stylesheet
    // -ms-filter: ~"progid:DXImageTransform.Microsoft.Chroma(color='#000000')";
    // behavior: url(/PIE.htc)
    // #transformOrigin(@origin);
}

#scale(@ratio: 1.5){
    -webkit-transform: scale(@ratio);
    -moz-transform: scale(@ratio);
    -o-transform: scale(@ratio);
    -ms-transform: scale(@ratio);
    transform: scale(@ratio);
}

#splitBorder(@top: #fff, @bottom: #000){
    border-top: 1px solid @bottom;
    border-bottom: 1px solid @top;

    &:first-child{border-top: 0}
    &:last-child{border-bottom: 0}
}

#sr-only(){
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    border: 0;
}

#stylableList(){
    counter-reset: li; /* Initiate a counter */

    > li {
        &:before {
            content: counter(li); /* Use the counter as content */
            counter-increment: li; /* Increment the counter by 1 */
        }
    }
}

#transform(@args){
    -moz-transform: @args;
    -webkit-transform: @args;
    -o-transform: @args;
    -ms-transform: @args;
    transform: @args;
}

    // #transforms (@rotate: 90deg, @scale: 1, @skew: 1deg, @translate: 10px) {
    //  -webkit-transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    //  -moz-transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    //  -o-transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    //  -ms-transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    //  transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    // }

#transition(@args){
    -webkit-transition: @args;
    -moz-transition: @args;
    -ms-transition: @args;
    -o-transition: @args;
    transition: @args
}

    // INTERESTING COMMENTS. REQIRES INVESTIGATION
    // #transition(...) {
    //  // ... to allow variable parameters
    //  // Backticks for JavaScript evaluation
    //  // Variable string interpolation
    //  // A ~ prefix to escape the resulting expression (i.e. stop LESS from enclosing it in a string)
    //  // Good old regular expressions
    //  @props: @arguments;//~`"@{arguments}".replace(/[\[\]]/g, ',')`;;
    //  -webkit-transition: @arguments;
    //  -moz-transition: @arguments;
    //  -o-transition: @arguments;
    //  -ms-transition: @arguments;
    //  transition: @arguments;
    // }

#transitionDuration(@duration: 0.2s) {
    -moz-transition-duration: @duration;
    -webkit-transition-duration: @duration;
    transition-duration: @duration;
}

#transitionDelay(@delay){
    transition-delay: @delay;
    -moz-transition-delay: @delay;
    -webkit-transition-delay: @delay;
    -o-transition-delay: @delay;
}

#transitionProperty(@property: all) {
    -moz-transition-property: @property;
    -webkit-transition-property: @property;
    transition-property: @property;
}

#translate(@x:0, @y:0, @z:0) {
    -moz-transform: translate(@x, @y, @z);
    -webkit-transform: translate(@x, @y, @z);
    -o-transform: translate(@x, @y, @z);
    -ms-transform: translate(@x, @y, @z);
    transform: translate(@x, @y, @z);
}

#transformOrigin(@args){
    -webkit-transform-origin: @args;
    -moz-transform-origin: @args;
    -ms-transform-origin: @args;
    -o-transform-origin: @args;
    transform-origin: @args;
}

#truncate(@_){
}

#truncate(apply){
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    width: 100%; // can be overridden if need be
}

#truncate(remove){
    white-space: normal;
    text-overflow: clip;
    width: auto;
}

#wordBreak(){
    -ms-word-break: break-all;
    word-break: break-all;
    // Non standard for webkit
    word-break: break-word;
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    hyphens: auto;
}

// REQUIRE WORK

// #desaturate(){
//     -webkit-filter: grayscale(1);
//     -webkit-filter: grayscale(100%);
//     -moz-filter: grayscale(100%);
//     -ms-filter: grayscale(100%);
//     -o-filter: grayscale(100%);
//     filter: grayscale(100%);
//     filter: url(desaturate.svg#greyscale);
//     filter: gray;
// }

// #saturate(){
//     filter: none;
//     -webkit-filter: none;
//     -moz-filter: none;
//     -ms-filter: none;
//     -o-filter: none;
//     filter: none;
// }
